<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://objectdisoriented.evokewonder.com</id><title>Object Disoriented</title><subtitle>Building robots with Rust. Navel-gazing about tech. Doing buzzwords on Kubernetes.</subtitle> <updated>2021-01-09T19:25:40-08:00</updated> <author> <name>David R. Morrison</name> <uri>https://objectdisoriented.evokewonder.com</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://objectdisoriented.evokewonder.com" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator> <rights> © 2021 David R. Morrison </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Patching LLVM and rustc</title><link href="https://objectdisoriented.evokewonder.com/posts/patching-llvm/" rel="alternate" type="text/html" title="Patching LLVM and rustc" /><published>2021-01-09T19:23:00-08:00</published> <updated>2021-01-09T19:23:00-08:00</updated> <id>https://objectdisoriented.evokewonder.com/posts/patching-llvm/</id> <content src="https://objectdisoriented.evokewonder.com/posts/patching-llvm/" /> <author> <name>David R. Morrison</name> </author> <summary> This post is just an aside; As I mentioned in my last post, there is a compiler bug in LLVM that is resulting in incorrect code being generated for AVR with Rust. I made some vague assertions in a footnote about “just follow the directions and you’ll be fine” because I couldn’t remember how to do it, and then I ended up having to figure out how to rebuild my toolchain today. So I’m mostly pos... </summary> </entry> <entry><title>Introducing Rustybot (part 2 of n)</title><link href="https://objectdisoriented.evokewonder.com/posts/introducing-rustybot-part-2/" rel="alternate" type="text/html" title="Introducing Rustybot (part 2 of n)" /><published>2021-01-04T23:00:00-08:00</published> <updated>2021-01-04T23:00:00-08:00</updated> <id>https://objectdisoriented.evokewonder.com/posts/introducing-rustybot-part-2/</id> <content src="https://objectdisoriented.evokewonder.com/posts/introducing-rustybot-part-2/" /> <author> <name>David R. Morrison</name> </author> <summary> N.B. This is the second part of a series about programming an arduino robot using Rust’s async primitives (Part 1, 2). If you just want to skip to the source code, click here. PSA: click on all the things Ok, one bit of housekeeping first: a few people complained that the animated GIFs from the last post were distracting and made it hard to read, which, as much as I hate to admit it, is ... </summary> </entry> <entry><title>Introducing Rustybot (part 1 of n)</title><link href="https://objectdisoriented.evokewonder.com/posts/introducing-rustybot-part-1/" rel="alternate" type="text/html" title="Introducing Rustybot (part 1 of n)" /><published>2020-12-21T23:30:00-08:00</published> <updated>2021-01-04T23:06:20-08:00</updated> <id>https://objectdisoriented.evokewonder.com/posts/introducing-rustybot-part-1/</id> <content src="https://objectdisoriented.evokewonder.com/posts/introducing-rustybot-part-1/" /> <author> <name>David R. Morrison</name> </author> <summary> N.B. This is the first part of a series about programming an Arduino robot using Rust’s async primitives (Part 1, 2). If you just want to skip to the source code, click here. So you want to build a robot? It all started when I decided I was going to build a quadcopter. But not just any quadcopter, I was going to get all the parts and put it together myself! And then I was going to wri... </summary> </entry> </feed>
